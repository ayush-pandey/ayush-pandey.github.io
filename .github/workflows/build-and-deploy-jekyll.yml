# name: Decrypt and Deploy Workflow
# on: push
# jobs:
#     decrypt:
#       runs-on: ubuntu-latest
#       steps:
#       - uses: actions/checkout@v4
  
#       - name: Set up Python
#         uses: actions/setup-python@v5
#         with:
#           python-version: '3.x'

#       - name: Install Python dependencies
#         run: |
#             python -m pip install --upgrade pip
#             pip install cryptography
#       - name: Decrypt comments
#         env:
#             ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
#         run: |
#             python -c "import base64
#             import os
#             from cryptography.fernet import Fernet
#             encryption_key = os.getenv('ENCRYPTION_KEY')
#             fernet = Fernet(encryption_key)
#             with open('documents/encrypted_comments.dat', 'rb') as encrypted_file:
#                 encrypted_data = encrypted_file.read()
#             decrypted_data = fernet.decrypt(encrypted_data).decode('utf-8')
#             with open('documents/decrypted_comments.json', 'w') as decrypted_file:
#                 decrypted_file.write(decrypted_data)
#             "

#       # - name: Decrypt comments
#       #   env:
#       #     ENCRYPTION_KEY: ${{ secrets.ENCRYPTION_KEY }}
#       #   run: |
#       #     from cryptography.fernet import Fernet
#       #     with open('documents/encrypted_comments.dat', 'rb') as encrypted_file:
#       #         encrypted_data = encrypted_file.read()
#       #     fernet = Fernet(ENCRYPTION_KEY)
#       #     decrypted_data = fernet.decrypt(encrypted_data).decode()
#       #     with open('documents/decrypted_comments.json', 'w') as decrypted_file:
#       #         decrypted_file.write(decrypted_data)
  
#       - name: Upload Decrypted Data as Artifact
#         uses: actions/upload-artifact@v4
#         with:
#           name: decrypted-comments
#           path: documents/decrypted_comments.json

#       - name: Prepare Decrypted Data for Jekyll
#         run: |
#           mkdir -p ./_data
#           mv documents/decrypted_comments.json ./_data/comments.json
#       - name: Copy Decrypted Data to Assets
#         run: |
#           mkdir -p ./assets
#           cp ./_data/comments.json ./assets/comments.json
 
name: build-and-deploy-jekyll
on: push
jobs:
    build:
        permissions:
          contents: read
          pages: write
          id-token: write
        # needs: decrypt
        # Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
        # However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
        concurrency:
          group: "pages"
          cancel-in-progress: false
        runs-on: ubuntu-latest
        steps:
          - name: Checkout code
            uses: actions/checkout@v4
          # - name: Download Decrypted Data
            # uses: actions/download-artifact@v4
            # with:
            #   name: decrypted-comments
            #   path: documents/decrypted_comments.json
          - name: Checkout
            uses: actions/checkout@v4
          - name: Setup Pages
            uses: actions/configure-pages@v4
          - name: Build with Jekyll
            uses: actions/jekyll-build-pages@v1
            with:
              source: ./
              destination: ./_site
          - name: Upload artifact
            uses: actions/upload-pages-artifact@v3
    # Deployment job
    deploy:
        permissions:
          contents: read
          pages: write
          id-token: write
        environment:
          name: github-pages
          url: ${{ steps.deployment.outputs.page_url }}
        runs-on: ubuntu-latest
        needs: build
        steps:
          - name: Deploy to GitHub Pages
            id: deployment
            uses: actions/deploy-pages@v4
            with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
            
